package willey.lib.util;

public class FunctionUtil
{
	public static <A, B, C> CombinableFunction<A, B, C> combine(Function<A, B> pFunction1,
			Function<B, C> pFunction2)
	{
		return new CombinableFunction<A, B, C>(pFunction1, pFunction2);
	}
	
	final public static class CombinableFunction<A, B, C> implements Function<A, C>
	{
		private final Function<A, B> mFunction1;
		private final Function<B, C> mFunction2;
		
		private CombinableFunction(Function<A,B> pFunction1, Function<B, C> pFunction2)
		{
			mFunction1 = pFunction1;
			mFunction2 = pFunction2;
		}
		
		public final C apply(A pFrom)
		{
			return mFunction2.apply(mFunction1.apply(pFrom));
		}
		
		public <D> CombinableFunction<A, C, D> combine(Function<C, D> pFunction)
		{
			return new CombinableFunction<A, C, D>(this, pFunction);
		}
	}
}
